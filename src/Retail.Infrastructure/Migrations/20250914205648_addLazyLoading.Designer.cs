// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Retail.Infrastructure.Context;

#nullable disable

namespace Retail.Infrastructure.Migrations
{
    [DbContext(typeof(RetailDbContext))]
    [Migration("20250914205648_addLazyLoading")]
    partial class addLazyLoading
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuarterlyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quarter")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuarterlyPlans");
                });

            modelBuilder.Entity("QuarterlyPlanSupplier", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("PlanId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("QuarterlyPlanSuppliers");
                });

            modelBuilder.Entity("Retail.Domain.Entities.StoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StoreItems");
                });

            modelBuilder.Entity("Retail.Domain.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StoreItemId")
                        .HasColumnType("integer");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StoreItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SupplierStoreItem", b =>
                {
                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("SupplierPrice")
                        .HasColumnType("numeric");

                    b.HasKey("SupplierId", "StoreItemId");

                    b.HasIndex("StoreItemId");

                    b.ToTable("SupplierStoreItems");
                });

            modelBuilder.Entity("QuarterlyPlanSupplier", b =>
                {
                    b.HasOne("QuarterlyPlan", "QuarterlyPlan")
                        .WithMany("QuarterlyPlanSuppliers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retail.Domain.Entities.Supplier", "Supplier")
                        .WithMany("QuarterlyPlanSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuarterlyPlan");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Sale", b =>
                {
                    b.HasOne("Retail.Domain.Entities.StoreItem", "StoreItem")
                        .WithMany("Sales")
                        .HasForeignKey("StoreItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retail.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Sales")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreItem");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SupplierStoreItem", b =>
                {
                    b.HasOne("Retail.Domain.Entities.StoreItem", "StoreItem")
                        .WithMany("SupplierStoreItems")
                        .HasForeignKey("StoreItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retail.Domain.Entities.Supplier", "Supplier")
                        .WithMany("SupplierStoreItems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreItem");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("QuarterlyPlan", b =>
                {
                    b.Navigation("QuarterlyPlanSuppliers");
                });

            modelBuilder.Entity("Retail.Domain.Entities.StoreItem", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("SupplierStoreItems");
                });

            modelBuilder.Entity("Retail.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("QuarterlyPlanSuppliers");

                    b.Navigation("Sales");

                    b.Navigation("SupplierStoreItems");
                });
#pragma warning restore 612, 618
        }
    }
}
